name: Mapt Provision Test

on:
  pull_request:
    branches:
      - KFLUXDP-333
      - main
      - test-checkton-failure
    paths:
      - 'tasks/mapt-oci/kind-aws-spot/provision/**'
      - 'tasks/mapt-oci/kind-aws-spot/deprovision/**'
      - '.github/workflows/mapt-provision-test.yaml'
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
    types:
      - checks_requested

# Central configuration for the workflow
env:
  MAPT_ARCH: x86_64
  MAPT_CPUS: 1
  MAPT_MEMORY: 1
  MAPT_SPOT: "true"
  MAPT_SPOT_INCREASE_RATE: 10
  MAPT_TIMEOUT: 15m
  CLUSTER_ID: pr-${{ github.event.number }}-${{ github.run_id }}

jobs:
  test-provision-deprovision:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      PULL_SECRET_PRESENT: ${{ secrets.PULL_SECRET != '' }}
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: 3. Install Mapt CLI
        run: |
          curl -L https://github.com/mapt-oss/mapt/releases/download/v0.9.7/mapt-linux-amd64 -o mapt
          chmod +x mapt
          sudo mv mapt /usr/local/bin/

      - name: 4. Configure AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[default]" > ~/.aws/config
          echo "region = us-east-1" >> ~/.aws/config

      - name: 5. Create AWS Credentials Secret
        run: |
          kubectl create secret generic aws-credentials \
            --from-literal=access-key="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --from-literal=secret-key="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --from-literal=region="us-east-1" \
            --from-literal=bucket="konflux-test-infra" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 6. Create OCI Credentials Secret
        run: |
          kubectl create secret generic konflux-test-infra \
            --from-literal=username="dummy" \
            --from-literal=password="dummy" \
            --from-literal=registry="quay.io" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 7. Apply Mapt Tasks
        run: |
          kubectl apply -f tasks/mapt-oci/kind-aws-spot/provision/0.2/kind-aws-provision.yaml
          kubectl apply -f tasks/mapt-oci/kind-aws-spot/deprovision/0.1/kind-aws-deprovision.yaml

      - name: 8. Create Test Pipeline
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: tekton.dev/v1
          kind: Pipeline
          metadata:
            name: test-aws-kind-lifecycle
          spec:
            params:
              - name: id
            tasks:
              - name: mapt-provision
                taskRef:
                  name: kind-aws-provision
                params:
                  - name: id
                    value: \$(params.id)
                  - name: secret-aws-credentials
                    value: "aws-credentials"
                  - name: ownerName
                    value: \$(context.pipelineRun.name)
                  - name: ownerUid
                    value: \$(context.pipelineRun.uid)
                  - name: arch
                    value: '${{ env.MAPT_ARCH }}'
                  - name: cpus
                    value: '${{ env.MAPT_CPUS }}'
                  - name: memory
                    value: '${{ env.MAPT_MEMORY }}'
                  - name: spot
                    value: '${{ env.MAPT_SPOT }}'
                  - name: spot-increase-rate
                    value: '${{ env.MAPT_SPOT_INCREASE_RATE }}'
                  - name: timeout
                    value: '${{ env.MAPT_TIMEOUT }}'
                  - name: tags
                    value: "created-by=github-actions"
                  - name: oci-ref
                    value: "not-used"

              - name: mapt-deprovision
                runAfter: ["mapt-provision"]
                taskRef:
                  name: kind-aws-deprovision
                params:
                  - name: id
                    value: \$(params.id)
                  - name: secret-aws-credentials
                    value: "aws-credentials"
                  - name: cluster-access-secret
                    value: \$(tasks.mapt-provision.results.cluster-access-secret)
                  - name: oci-container
                    value: "not-used-in-successful-run"
                  - name: oci-credentials
                    value: "konflux-test-infra"
          EOF

      - name: 9. Run Test Pipeline
        run: |
          LOWERCASE_CLUSTER_ID=$(echo "$CLUSTER_ID" | tr '[:upper:]' '[:lower:]')
          
          cat <<EOF | kubectl apply -f -
          apiVersion: tekton.dev/v1
          kind: PipelineRun
          metadata:
            name: test-${LOWERCASE_CLUSTER_ID}
          spec:
            pipelineRef:
              name: test-aws-kind-lifecycle
            params:
              - name: id
                value: "$CLUSTER_ID"
          EOF

      - name: 10. Wait for Pipeline Completion
        run: |
          kubectl wait --for=condition=Succeeded --timeout=20m pipelinerun/test-$(echo "$CLUSTER_ID" | tr '[:upper:]' '[:lower:]')

      - name: 11. Show Pipeline Logs
        if: failure()
        run: |
          kubectl logs -l tekton.dev/pipelineRun=test-$(echo "$CLUSTER_ID" | tr '[:upper:]' '[:lower:]') --all-containers=true

      - name: 12. Cleanup
        if: always()
        run: |
          kubectl delete pipelinerun test-$(echo "$CLUSTER_ID" | tr '[:upper:]' '[:lower:]') --ignore-not-found=true
          kubectl delete pipeline test-aws-kind-lifecycle --ignore-not-found=true
          kubectl delete secret aws-credentials --ignore-not-found=true
          kubectl delete secret konflux-test-infra --ignore-not-found=true